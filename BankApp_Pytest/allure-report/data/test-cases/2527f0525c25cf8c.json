{"uid":"2527f0525c25cf8c","name":"BankApp url testing 01","fullName":"testcases.test_UserProfile.Test_UserProfile#test_BankApp_Url_001","historyId":"ee2fdea55cc77e27ae808f489dc85777","time":{"start":1728714431137,"stop":1728714431137,"duration":0},"description":"self.Log.debug(\"This is debug\")\n        self.Log.info(\"This is info\")\n        self.Log.warning(\"This is warning\")\n        self.Log.error(\"This is error\")\n        self.Log.critical(\"This is critical\")","descriptionHtml":"<p>self.Log.debug(&quot;This is debug&quot;)<br />\nself.Log.info(&quot;This is info&quot;)<br />\nself.Log.warning(&quot;This is warning&quot;)<br />\nself.Log.error(&quot;This is error&quot;)<br />\nself.Log.critical(&quot;This is critical&quot;)</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=129.0.6668.90)\nStacktrace:\n\tGetHandleVerifier [0x00007FF6C38E9412+29090]\n\t(No symbol) [0x00007FF6C385E239]\n\t(No symbol) [0x00007FF6C371B1DA]\n\t(No symbol) [0x00007FF6C36EFAF5]\n\t(No symbol) [0x00007FF6C379E2C7]\n\t(No symbol) [0x00007FF6C37B5EB1]\n\t(No symbol) [0x00007FF6C3796493]\n\t(No symbol) [0x00007FF6C37609D1]\n\t(No symbol) [0x00007FF6C3761B31]\n\tGetHandleVerifier [0x00007FF6C3C0871D+3302573]\n\tGetHandleVerifier [0x00007FF6C3C54243+3612627]\n\tGetHandleVerifier [0x00007FF6C3C4A417+3572135]\n\tGetHandleVerifier [0x00007FF6C39A5EB6+801862]\n\t(No symbol) [0x00007FF6C386945F]\n\t(No symbol) [0x00007FF6C3864FB4]\n\t(No symbol) [0x00007FF6C3865140]\n\t(No symbol) [0x00007FF6C385461F]\n\tBaseThreadInitThunk [0x00007FF9A51C257D+29]\n\tRtlUserThreadStart [0x00007FF9A6B8AF08+40]","statusTrace":"request = <SubRequest 'setup' for <Function test_BankApp_Url_001>>\n\n    @pytest.fixture()\n    def setup(request):\n        browser = request.config.getoption(\"--browser\")\n        if browser == \"chrome\":\n             driver = webdriver.Chrome()\n        elif browser == \"firefox\":\n            driver = webdriver.Firefox()\n        elif browser == \"edge\":\n            driver = webdriver.Edge()\n    \n        else:\n            driver = webdriver.Chrome(options=chrome_options)\n        driver.get(\"https://bankapp.credence.in/\")\n>       driver.maximize_window()\n\ntestcases\\conftest.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nD:\\Python\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:506: in maximize_window\n    self.execute(command, None)\nD:\\Python\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000244B2A3DD60>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such window\",\"message\":\"no such window: target window already closed\\\\...07FF6C385461F]\\\\n\\\\tBaseThreadInitThunk [0x00007FF9A51C257D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FF9A6B8AF08+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nE       from unknown error: web view not found\nE         (Session info: chrome=129.0.6668.90)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF6C38E9412+29090]\nE       \t(No symbol) [0x00007FF6C385E239]\nE       \t(No symbol) [0x00007FF6C371B1DA]\nE       \t(No symbol) [0x00007FF6C36EFAF5]\nE       \t(No symbol) [0x00007FF6C379E2C7]\nE       \t(No symbol) [0x00007FF6C37B5EB1]\nE       \t(No symbol) [0x00007FF6C3796493]\nE       \t(No symbol) [0x00007FF6C37609D1]\nE       \t(No symbol) [0x00007FF6C3761B31]\nE       \tGetHandleVerifier [0x00007FF6C3C0871D+3302573]\nE       \tGetHandleVerifier [0x00007FF6C3C54243+3612627]\nE       \tGetHandleVerifier [0x00007FF6C3C4A417+3572135]\nE       \tGetHandleVerifier [0x00007FF6C39A5EB6+801862]\nE       \t(No symbol) [0x00007FF6C386945F]\nE       \t(No symbol) [0x00007FF6C3864FB4]\nE       \t(No symbol) [0x00007FF6C3865140]\nE       \t(No symbol) [0x00007FF6C385461F]\nE       \tBaseThreadInitThunk [0x00007FF9A51C257D+29]\nE       \tRtlUserThreadStart [0x00007FF9A6B8AF08+40]\n\nD:\\Python\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchWindowException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"setup","time":{"start":1728714431142,"stop":1728714438549,"duration":7407},"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=129.0.6668.90)\nStacktrace:\n\tGetHandleVerifier [0x00007FF6C38E9412+29090]\n\t(No symbol) [0x00007FF6C385E239]\n\t(No symbol) [0x00007FF6C371B1DA]\n\t(No symbol) [0x00007FF6C36EFAF5]\n\t(No symbol) [0x00007FF6C379E2C7]\n\t(No symbol) [0x00007FF6C37B5EB1]\n\t(No symbol) [0x00007FF6C3796493]\n\t(No symbol) [0x00007FF6C37609D1]\n\t(No symbol) [0x00007FF6C3761B31]\n\tGetHandleVerifier [0x00007FF6C3C0871D+3302573]\n\tGetHandleVerifier [0x00007FF6C3C54243+3612627]\n\tGetHandleVerifier [0x00007FF6C3C4A417+3572135]\n\tGetHandleVerifier [0x00007FF6C39A5EB6+801862]\n\t(No symbol) [0x00007FF6C386945F]\n\t(No symbol) [0x00007FF6C3864FB4]\n\t(No symbol) [0x00007FF6C3865140]\n\t(No symbol) [0x00007FF6C385461F]\n\tBaseThreadInitThunk [0x00007FF9A51C257D+29]\n\tRtlUserThreadStart [0x00007FF9A6B8AF08+40]\n\n","statusTrace":"  File \"D:\\Python\\Lib\\site-packages\\pluggy\\_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"D:\\Python\\Lib\\site-packages\\_pytest\\setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"D:\\Python\\Lib\\site-packages\\pluggy\\_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\Python\\Lib\\site-packages\\_pytest\\fixtures.py\", line 1139, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\Python\\Lib\\site-packages\\_pytest\\fixtures.py\", line 890, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"D:\\Credence Projects\\BankApp_Pytest\\BankApp_Pytest\\testcases\\conftest.py\", line 24, in setup\n    driver.maximize_window()\n  File \"D:\\Python\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 506, in maximize_window\n    self.execute(command, None)\n  File \"D:\\Python\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 354, in execute\n    self.error_handler.check_response(response)\n  File \"D:\\Python\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":0}],"testStage":{"description":"self.Log.debug(\"This is debug\")\n        self.Log.info(\"This is info\")\n        self.Log.warning(\"This is warning\")\n        self.Log.error(\"This is error\")\n        self.Log.critical(\"This is critical\")","status":"broken","statusMessage":"selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=129.0.6668.90)\nStacktrace:\n\tGetHandleVerifier [0x00007FF6C38E9412+29090]\n\t(No symbol) [0x00007FF6C385E239]\n\t(No symbol) [0x00007FF6C371B1DA]\n\t(No symbol) [0x00007FF6C36EFAF5]\n\t(No symbol) [0x00007FF6C379E2C7]\n\t(No symbol) [0x00007FF6C37B5EB1]\n\t(No symbol) [0x00007FF6C3796493]\n\t(No symbol) [0x00007FF6C37609D1]\n\t(No symbol) [0x00007FF6C3761B31]\n\tGetHandleVerifier [0x00007FF6C3C0871D+3302573]\n\tGetHandleVerifier [0x00007FF6C3C54243+3612627]\n\tGetHandleVerifier [0x00007FF6C3C4A417+3572135]\n\tGetHandleVerifier [0x00007FF6C39A5EB6+801862]\n\t(No symbol) [0x00007FF6C386945F]\n\t(No symbol) [0x00007FF6C3864FB4]\n\t(No symbol) [0x00007FF6C3865140]\n\t(No symbol) [0x00007FF6C385461F]\n\tBaseThreadInitThunk [0x00007FF9A51C257D+29]\n\tRtlUserThreadStart [0x00007FF9A6B8AF08+40]","statusTrace":"request = <SubRequest 'setup' for <Function test_BankApp_Url_001>>\n\n    @pytest.fixture()\n    def setup(request):\n        browser = request.config.getoption(\"--browser\")\n        if browser == \"chrome\":\n             driver = webdriver.Chrome()\n        elif browser == \"firefox\":\n            driver = webdriver.Firefox()\n        elif browser == \"edge\":\n            driver = webdriver.Edge()\n    \n        else:\n            driver = webdriver.Chrome(options=chrome_options)\n        driver.get(\"https://bankapp.credence.in/\")\n>       driver.maximize_window()\n\ntestcases\\conftest.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nD:\\Python\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:506: in maximize_window\n    self.execute(command, None)\nD:\\Python\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000244B2A3DD60>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such window\",\"message\":\"no such window: target window already closed\\\\...07FF6C385461F]\\\\n\\\\tBaseThreadInitThunk [0x00007FF9A51C257D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FF9A6B8AF08+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nE       from unknown error: web view not found\nE         (Session info: chrome=129.0.6668.90)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF6C38E9412+29090]\nE       \t(No symbol) [0x00007FF6C385E239]\nE       \t(No symbol) [0x00007FF6C371B1DA]\nE       \t(No symbol) [0x00007FF6C36EFAF5]\nE       \t(No symbol) [0x00007FF6C379E2C7]\nE       \t(No symbol) [0x00007FF6C37B5EB1]\nE       \t(No symbol) [0x00007FF6C3796493]\nE       \t(No symbol) [0x00007FF6C37609D1]\nE       \t(No symbol) [0x00007FF6C3761B31]\nE       \tGetHandleVerifier [0x00007FF6C3C0871D+3302573]\nE       \tGetHandleVerifier [0x00007FF6C3C54243+3612627]\nE       \tGetHandleVerifier [0x00007FF6C3C4A417+3572135]\nE       \tGetHandleVerifier [0x00007FF6C39A5EB6+801862]\nE       \t(No symbol) [0x00007FF6C386945F]\nE       \t(No symbol) [0x00007FF6C3864FB4]\nE       \t(No symbol) [0x00007FF6C3865140]\nE       \t(No symbol) [0x00007FF6C385461F]\nE       \tBaseThreadInitThunk [0x00007FF9A51C257D+29]\nE       \tRtlUserThreadStart [0x00007FF9A6B8AF08+40]\n\nD:\\Python\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchWindowException","steps":[],"attachments":[{"uid":"4fa408ff68cdb2c0","name":"log","source":"4fa408ff68cdb2c0.txt","type":"text/plain","size":383}],"parameters":[],"attachmentStep":false,"stepsCount":0,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":1},"afterStages":[],"labels":[{"name":"tag","value":"group1"},{"name":"tag","value":"sanity"},{"name":"parentSuite","value":"testcases"},{"name":"suite","value":"test_UserProfile"},{"name":"subSuite","value":"Test_UserProfile"},{"name":"host","value":"DESKTOP-R46A2PA"},{"name":"thread","value":"496-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcases.test_UserProfile"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["sanity","group1"]},"source":"2527f0525c25cf8c.json","parameterValues":[]}